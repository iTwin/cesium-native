trigger: none
pr: none

parameters:
  - name: PackageVersion
    type: string
  - name: LinuxBuild
    displayName: Linux build
    type: boolean
    default: true
  - name: WindowsBuild
    displayName: Windows build
    type: boolean
    default: false
    
resources:
  repositories:
    - repository: vcpkg
      type: github
      name: microsoft/vcpkg
      endpoint: github.com_test
      
variables:
  GIT_LFS_SKIP_SMUDGE: 1 

jobs:
  - job:
    displayName: Publish cesium-native on Linux
    condition: eq('${{parameters.LinuxBuild}}', true)
    pool:
      name: imodelNative-Debian12
      demands: "Agent.OS -equals Linux"
    steps:
      - checkout: self
        lfs: true
        submodules: recursive
        persistCredentials: true        
                
      - checkout: vcpkg
        lfs: true
        submodules: recursive
        persistCredentials: true

      - task: ExtractFiles@1
        displayName: 'Extract cmake executable'
        inputs:
          archiveFilePatterns: "$(Build.SourcesDirectory)/cesium-native/tools/cmake-linux.zip"
          destinationFolder: "$(Build.SourcesDirectory)/cesium-native/tools"
          cleanDestinationFolder: false

      - script: chmod +x $(Build.SourcesDirectory)/cesium-native/tools/cmake-linux/bin/cmake      
        displayName: 'chmod +x on cmake executable'

      - script: $(Build.SourcesDirectory)/cesium-native/tools/cmake-linux/bin/cmake -S $(Build.SourcesDirectory)/cesium-native -B $(Build.SourcesDirectory)/cesium-native/build -D CMAKE_C_COMPILER=/usr/lib/llvm-16/bin/clang -D CMAKE_CXX_COMPILER=/usr/lib/llvm-16/bin/clang++ -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/vcpkg/scripts/buildsystems/vcpkg.cmake -DCESIUM_USE_EZVCPKG=OFF -DVCPKG_TARGET_TRIPLET=x64-linux -DVCPKG_HOST_TRIPLET=x64-linux
        displayName: 'Generate cmake project'
        env:
          GIT_LFS_SKIP_SMUDGE: 1

      - script: $(Build.SourcesDirectory)/cesium-native/tools/cmake-linux/bin/cmake --build $(Build.SourcesDirectory)/cesium-native/build --target CesiumGltfWriter --config Release
        displayName: 'Build CesiumGltfWriter target'

      - template: copy-include-files.yml
        parameters:
          platform: linux

      - task: CopyFiles@2
        displayName: 'Copy glm files to upack staging directory'
        inputs:
          SourceFolder: "$(Build.SourcesDirectory)/cesium-native/build/vcpkg_installed/x64-linux/include/glm"
          Contents: "**"
          TargetFolder: $(Build.SourcesDirectory)/cesium-native/linux/include/glm

      - task: CopyFiles@2
        displayName: 'Copy GSL include files to upack staging directory'
        inputs:
          SourceFolder: "$(Build.SourcesDirectory)/cesium-native/build/vcpkg_installed/x64-linux/include/gsl"
          Contents: "**"
          TargetFolder: $(Build.SourcesDirectory)/cesium-native/linux/include/gsl

      - task: CopyFiles@2
        displayName: 'Copy CesiumGltfWriter lib to upack staging directory'
        inputs:
          SourceFolder: "$(Build.SourcesDirectory)/cesium-native/build/CesiumGltfWriter"
          Contents: "*.a"
          TargetFolder: $(Build.SourcesDirectory)/cesium-native/linux/lib

      - task: CopyFiles@2
        displayName: 'Copy CesiumJsonWriter lib to upack staging directory'
        inputs:
          SourceFolder: "$(Build.SourcesDirectory)/cesium-native/build/CesiumJsonWriter"
          Contents: "*.a"
          TargetFolder: $(Build.SourcesDirectory)/cesium-native/upack-staging/linux/lib

      # Uncomment this task for testing without having to publish to upack feed
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: '$(Build.SourcesDirectory)/cesium-native/upack-staging'
          artifactName: 'cesium-native_x64_linux'

      # - task: UniversalPackages@0
        # displayName: 'Publish cesium-native to Universal Package feed'
        # inputs:
          # command: "publish"
          # publishDirectory: "upack-staging/linux"
          # feedsToUsePublish: "internal"
          # vstsFeedPublish: "upack"
          # vstsFeedPackagePublish: "cesium_native_x64_linux"
          # versionOption: "custom"
          # versionPublish: ${{parameters.PackageVersion}}
        # env:
          # AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)

  - job:
    displayName: Publish cesium-native on Windows
    condition: eq('${{parameters.WindowsBuild}}', true)
    pool:
      vmImage: "windows-2022"
    steps:
      - checkout: self
        lfs: false
        submodules: recursive
        persistCredentials: true      
                
      - checkout: vcpkg
        lfs: false
        submodules: recursive
        persistCredentials: true

      - script: git config --global lfs.fetchinclude ""  # Ignore all LFS files
        displayName: "Disable LFS"

      - task: CMake@1
        displayName: 'Generate cmake project'
        inputs:
          cmakeArgs: -S $(Build.SourcesDirectory)/cesium-native -B $(Build.SourcesDirectory)/cesium-native/build -G "Visual Studio 17 2022" -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/vcpkg/scripts/buildsystems/vcpkg.cmake -DCESIUM_USE_EZVCPKG=OFF -DVCPKG_TARGET_TRIPLET=x64-windows-static-md -DVCPKG_HOST_TRIPLET=x64-windows-static-md
        env:
          GIT_LFS_SKIP_SMUDGE: 1
          
      - powershell: Get-Content -Path "$(Build.SourcesDirectory)\vcpkg\buildtrees\ktx\git-archive-err.log"
        displayName: 'Display file contents'
        condition: always()

      - task: CMake@1
        displayName: 'Build CesiumGltfWriter target'
        inputs:
          cmakeArgs: --build $(Build.SourcesDirectory)/cesium-native/build --target CesiumGltfWriter --config Release
      
      - template: copy-include-files.yml       
        parameters:
          platform: windows 

      - task: CopyFiles@2
        displayName: 'Copy glm files to upack staging directory'
        inputs:
          SourceFolder: "$(Build.SourcesDirectory)/cesium-native/build/vcpkg_installed/x64-windows-static-md/include/glm"
          Contents: "**"
          TargetFolder: $(Build.SourcesDirectory)/cesium-native/upack-staging/windows/include/glm

      - task: CopyFiles@2
        displayName: 'Copy GSL include files to upack staging directory'
        inputs:
          SourceFolder: "$(Build.SourcesDirectory)/cesium-native/build/vcpkg_installed/x64-windows-static-md/include/gsl"
          Contents: "**"
          TargetFolder: $(Build.SourcesDirectory)/cesium-native/upack-staging/windows/include/gsl

      - task: CopyFiles@2
        displayName: 'Copy CesiumGltfWriter lib to upack staging directory'
        inputs:
          SourceFolder: "$(Build.SourcesDirectory)/cesium-native/build/CesiumGltfWriter/Release"
          Contents: "*.lib"
          TargetFolder: $(Build.SourcesDirectory)/cesium-native/upack-staging/windows/lib

      - task: CopyFiles@2
        displayName: 'Copy CesiumGltfWriter lib to upack staging directory'
        inputs:
          SourceFolder: "$(Build.SourcesDirectory)/cesium-native/build/CesiumJsonWriter/Release"
          Contents: "*.lib"
          TargetFolder: $(Build.SourcesDirectory)/cesium-native/upack-staging/windows/lib

      # Uncomment this task for testing without having to publish to upack feed     
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: 'upack-staging'
          artifactName: 'cesium-native_x64_win'

      # - task: UniversalPackages@0
        # displayName: 'Publish cesium-native to Universal Package feed'
        # inputs:
          # command: "publish"
          # publishDirectory: "upack-staging/windows"
          # feedsToUsePublish: "internal"
          # vstsFeedPublish: "upack"
          # vstsFeedPackagePublish: "cesium_native_x64_win"
          # versionOption: "custom"
          # versionPublish: ${{parameters.PackageVersion}}
        # env:
          # AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)