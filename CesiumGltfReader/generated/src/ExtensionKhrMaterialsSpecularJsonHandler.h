// This file was generated by generate-classes.
// DO NOT EDIT THIS FILE!
#pragma once

#include "TextureInfoJsonHandler.h"

#include <CesiumGltf/ExtensionKhrMaterialsSpecular.h>
#include <CesiumJsonReader/ArrayJsonHandler.h>
#include <CesiumJsonReader/DoubleJsonHandler.h>
#include <CesiumJsonReader/ExtensibleObjectJsonHandler.h>

namespace CesiumJsonReader {
class JsonReaderOptions;
}

namespace CesiumGltfReader {
class ExtensionKhrMaterialsSpecularJsonHandler
    : public CesiumJsonReader::ExtensibleObjectJsonHandler,
      public CesiumJsonReader::IExtensionJsonHandler {
public:
  using ValueType = CesiumGltf::ExtensionKhrMaterialsSpecular;

  static inline constexpr const char* ExtensionName = "KHR_materials_specular";

  ExtensionKhrMaterialsSpecularJsonHandler(
      const CesiumJsonReader::JsonReaderOptions& options) noexcept;
  void reset(
      IJsonHandler* pParentHandler,
      CesiumGltf::ExtensionKhrMaterialsSpecular* pObject);

  virtual IJsonHandler* readObjectKey(const std::string_view& str) override;

  virtual void reset(
      IJsonHandler* pParentHandler,
      CesiumUtility::ExtensibleObject& o,
      const std::string_view& extensionName) override;

  virtual IJsonHandler& getHandler() override { return *this; }

protected:
  IJsonHandler* readObjectKeyExtensionKhrMaterialsSpecular(
      const std::string& objectType,
      const std::string_view& str,
      CesiumGltf::ExtensionKhrMaterialsSpecular& o);

private:
  CesiumGltf::ExtensionKhrMaterialsSpecular* _pObject = nullptr;
  CesiumJsonReader::DoubleJsonHandler _specularFactor;
  TextureInfoJsonHandler _specularTexture;
  CesiumJsonReader::
      ArrayJsonHandler<double, CesiumJsonReader::DoubleJsonHandler>
          _specularColorFactor;
  TextureInfoJsonHandler _specularColorTexture;
};
} // namespace CesiumGltfReader
